{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Gets the classID this contract has stored for a given NFT contract. If there is no class ID for the provided contract, returns None.",
      "type": "object",
      "required": [
        "class_id"
      ],
      "properties": {
        "class_id": {
          "type": "object",
          "required": [
            "contract"
          ],
          "properties": {
            "contract": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the NFT contract associated wtih the provided class ID. If no such contract exists, returns None. Returns Option<Addr>.",
      "type": "object",
      "required": [
        "nft_contract"
      ],
      "properties": {
        "nft_contract": {
          "type": "object",
          "required": [
            "class_id"
          ],
          "properties": {
            "class_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the class level metadata URI for the provided class_id. If there is no metadata, returns None. Returns `Option<Class>`.",
      "type": "object",
      "required": [
        "class_metadata"
      ],
      "properties": {
        "class_metadata": {
          "type": "object",
          "required": [
            "class_id"
          ],
          "properties": {
            "class_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "token_metadata"
      ],
      "properties": {
        "token_metadata": {
          "type": "object",
          "required": [
            "class_id",
            "token_id"
          ],
          "properties": {
            "class_id": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the owner of the NFT identified by CLASS_ID and TOKEN_ID. Errors if no such NFT exists. Returns `cw721::OwnerOfResonse`.",
      "type": "object",
      "required": [
        "owner"
      ],
      "properties": {
        "owner": {
          "type": "object",
          "required": [
            "class_id",
            "token_id"
          ],
          "properties": {
            "class_id": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the address that may pause this contract if one is set.",
      "type": "object",
      "required": [
        "pauser"
      ],
      "properties": {
        "pauser": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the current pause status.",
      "type": "object",
      "required": [
        "paused"
      ],
      "properties": {
        "paused": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets this contract's outgoing cw721-outgoing-proxy if one is set.",
      "type": "object",
      "required": [
        "outgoing_proxy"
      ],
      "properties": {
        "outgoing_proxy": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets this contract's incoming cw721-outgoing-proxy if one is set.",
      "type": "object",
      "required": [
        "incoming_proxy"
      ],
      "properties": {
        "incoming_proxy": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the code used for instantiating new cw721s.",
      "type": "object",
      "required": [
        "cw721_code_id"
      ],
      "properties": {
        "cw721_code_id": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the admin address for instantiating new cw721 contracts. In case of None, contract is immutable.",
      "type": "object",
      "required": [
        "cw721_admin"
      ],
      "properties": {
        "cw721_admin": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets the contract address length being used for instantiate2. In case of None, default length is 32 (standard in cosmwasm).",
      "type": "object",
      "required": [
        "contract_addr_length"
      ],
      "properties": {
        "contract_addr_length": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets a list of classID as key (from NonFungibleTokenPacketData) and cw721 contract as value (instantiated for that classID).",
      "type": "object",
      "required": [
        "nft_contracts"
      ],
      "properties": {
        "nft_contracts": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassId"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets a list of classID, tokenID, and local channelID. Used to determine the local channel that NFTs have been sent out on.",
      "type": "object",
      "required": [
        "outgoing_channels"
      ],
      "properties": {
        "outgoing_channels": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassToken"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets a list of classID, tokenID, and local channel ID. Used to determine the local channel that NFTs have arrived at this contract.",
      "type": "object",
      "required": [
        "incoming_channels"
      ],
      "properties": {
        "incoming_channels": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClassToken"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ClassId": {
      "description": "A class ID according to the ICS-721 spec. The newtype pattern is used here to provide some distinction between token and class IDs in the type system.",
      "type": "string"
    },
    "ClassToken": {
      "type": "object",
      "required": [
        "class_id",
        "token_id"
      ],
      "properties": {
        "class_id": {
          "$ref": "#/definitions/ClassId"
        },
        "token_id": {
          "$ref": "#/definitions/TokenId"
        }
      },
      "additionalProperties": false
    },
    "TokenId": {
      "description": "A token ID according to the ICS-721 spec. The newtype pattern is used here to provide some distinction between token and class IDs in the type system.",
      "type": "string"
    }
  }
}
